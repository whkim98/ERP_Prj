<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">

	
	<!-- 팀 no 선택 후 insert 할 때 -->
	<select id="teamList" resultType="com.lab.erp.vo.login.Erp_TeamVO" parameterType="map">
		select t.*, d.dept_name from erp_team t, erp_dept d 
		where t.dept_no = d.dept_no 
		<if test="type != null">
			<if test="type == 'team_name'">
				and t.team_name like '%${word}%'
			</if>S
			<if test="type == 'team_no'">
				and t.team_no = #{word} 
			</if>
			<if test="type == 'team_code'">
				and t.team_code like '%${word}%' 
			</if>
		</if>
	</select>
	
	<select id="teamName" resultType="com.lab.erp.vo.login.Erp_TeamVO" parameterType="String">
		select t.*, d.dept_name from erp_team t, erp_dept d 
		where t.dept_no = d.dept_no 
		and t.team_name like '%${team_name}%'
	</select>
	
	<!-- 팀 name으로 no 추출 -->
	<select id="teamNo" resultType="int" parameterType="String">
		select team_no from erp_team where team_name = #{team_name}
	</select>
	
	<select id="comNo" resultType="int" parameterType="String">
		select comcode_no from erp_comcode where comcode_code = #{comcode_code}
	</select>
	
	<!-- 계정 생성 시 권한을 부여할 때 필요한 전체 권한 리스트 출력 -->
	<select id="authorityList" resultType="com.lab.erp.vo.login.Erp_AuthorityVO">
		select * from erp_authority
	</select>
	
	<!-- admin -->
	<!-- 계정 생성 해줄 때 현재의 최대 no값 추출 후 insert -->
	<select id="adminMaxNo" resultType="int"> <!-- admin이 계정을 추가할 때 현재 admin 테이블의 최대 no값 추출 후 insert -->
		select max(admin_no) from erp_admin
	</select>
	
	<!-- 계정 생성해주기 -->
	<insert id="createAdmin" parameterType="com.lab.erp.vo.login.Erp_AdminVO">
		insert into erp_admin(team_no, admin_id, admin_pw, comcode_no) 
		values(#{team_no}, #{admin_id}, #{admin_pw}, #{comcode_no})
	</insert>
	
	<update id="updateAdmin" parameterType="com.lab.erp.vo.login.Erp_AdminVO">
		update erp_admin set team_no = #{team_no}, admin_id = #{admin_id}, admin_pw = #{admin_pw} where admin_no = #{admin_no}
	</update>
	
	<delete id="deleteAdmin" parameterType="int">
		delete from erp_admin where admin_no = #{admin_no}
	</delete>
	
	<!-- 전체 admin 계정 리스트 -->
	<select id="adminList" resultType="map" parameterType="map">
		select a.*, t.team_name, d.dept_name from erp_admin a, erp_team t, erp_dept d  
		where d.dept_no = t.dept_no 
		and a.team_no = t.team_no 
		and a.comcode_no = #{comcode_no} 
		<if test="type != null">
			<if test="type == 'admin_id'">
				and a.admin_id like '%${word}%'
			</if>
			<if test="type == 'dept_name'">
				and d.dept_name like '%${word}%'
			</if>
			<if test="type == 'team_name'">
				and t.team_name like '%${word}%'
			</if>
		</if>
	</select>
	
	<select id="getComcodeName" parameterType="String" resultType="String">
		select comcode_name from erp_comcode where comcode_code = #{comcode_code}
	</select>
	
	<!-- admin 계정 하나의 정보 > 팀, 부서명까지 출력 -->
	<select id="selectAdmin" resultType="map" parameterType="int">
		select a.*, t.team_name, d.dept_name from erp_admin a, erp_team t, erp_dept d 
		where a.admin_no = #{admin_no} and d.dept_no = t.dept_no and a.team_no = t.team_no
	</select>
	
	<!-- admin 계정 팀별로 출력, List 팀별로 전부 넘기기 -->
	<select id="teamAdmin" resultType="map" parameterType="String">
		select a.*, t.team_name, d.dept_name from erp_admin a, erp_team t, erp_dept d 
		where t.team_name = #{team_name} and d.dept_no = t.dept_no and a.team_no = t.team_no
	</select>
	
	<!-- 계정 생성 후 아이디, 비밀번호 알려주기 -->
	<select id="giveAdmin" resultType="com.lab.erp.vo.login.Erp_AdminVO" parameterType="int">
		select admin_id, admin_pw from erp_admin where admin_no = #{admin_no}
	</select>
	
	<select id="checkAdminId" parameterType="String" resultType="int">
		select admin_no from erp_admin where admin_id = #{admin_in}
	</select>
	
	<!-- employee -->
	<!-- 직원 계정 생성 해줄 때 현재의 최대 no값 추출 후 insert -->
	<select id="emp1MaxNo" resultType="int">
		select max(employee1_no) from erp_employee1
	</select>
	<select id="emp2MaxNo" resultType="int">
		select max(employee2_no) from erp_employee2
	</select>
	
	<!-- 직원 계정 생성 해줄 때 -->
	<insert id="createEmployee1" parameterType="com.lab.erp.vo.login.Erp_Employee1VO">
		insert into erp_employee1 values(
		#{employee1_no}, 
		#{employee1_code},
		#{employee1_name}, 
		#{employee1_addr1}, 
		#{employee1_addr2}, 
		#{employee1_postal}, 
		#{employee1_residentno}, 
		#{employee1_phone}, 
		#{employee1_email}, 
		#{employee1_id}, 
		#{employee1_pw}, 
		#{employee1_disability}, 
		#{employee1_merit}
		)
	</insert>
	<insert id="createEmployee2" parameterType="com.lab.erp.vo.login.Erp_Employee2VO">
		insert into erp_employee2 values(
		#{employee2_no},
		#{employee1_no}, 
		#{team_no}, 
		#{employee2_extension}, 
		#{employee2_position}, 
		#{employee2_exp},
		#{employee2_salary},
		#{employee2_holiday},
		#{employee2_four},
		#{employee2_worktype}
		)
	</insert>
	
	<update id="updateEmp1" parameterType="com.lab.erp.vo.login.Erp_Employee1VO">
		update erp_employee1 set 
		employee1_code = #{employee1_code},
		employee1_name = #{employee1_name}, 
		employee1_addr1 = #{employee1_addr1}, 
		employee1_addr2 = #{employee1_addr2}, 
		employee1_postal = #{employee1_postal}, 
		employee1_residentno = #{employee1_residentno}, 
		employee1_phone = #{employee1_phone}, 
		employee1_email = #{employee1_email}, 
		employee1_disability = #{employee1_disability}, 
		employee1_merit = #{employee1_merit} 
		where employee1_no = #{employee1_no}
	</update>
	<update id="updateEmp2" parameterType="com.lab.erp.vo.login.Erp_Employee2VO">
		update erp_employee2 set 
		team_no = #{team_no}, 
		employee2_extension = #{employee2_extension}, 
		employee2_position = #{employee2_position}, 
		employee2_exp = #{employee2_exp},
		employee2_salary = #{employee2_salary},
		employee2_holiday = #{employee2_holiday},
		employee2_four = #{employee2_four},
		employee2_worktype = #{employee2_worktype} 
		where employee1_no = #{employee2_no}
	</update>
	
	<update id="updateEmpPw" parameterType="com.lab.erp.vo.login.Erp_Employee1VO">
		update erp_employee1 set 
		employee1_pw = #{employee1_pw} 
		where employee1_no = #{employee1_no}
	</update>
	
	<delete id="deleteEmp1" parameterType="int">
		delete erp_employee1 where employee1_no = #{employee1_no}
	</delete>
	<delete id="deleteEmp2" parameterType="int">
		delete erp_employee2 where employee2_no = #{employee2_no}
	</delete>
	
	<!-- 직원 한명의 정보 출력 -->
	<select id="selectEmp" resultType="map" parameterType="int">
		select e1.*, e2.*, t.team_name, d.dept_name 
		from erp_employee1 e1, erp_employee2 e2, erp_team t, erp_dept d 
		where e1.employee1_no = e2.employee1_no 
		and e2.team_no = t.team_no 
		and t.dept_no = d.dept_no 
		and e2.employee2_no = #{employee2_no} 
	</select>
	
	<!-- 전체 직원 리스트 -->
	<select id="EmpList" resultType="map" parameterType="map">
		select e1.*, e2.*, t.team_name, d.dept_name 
		from erp_employee1 e1, erp_employee2 e2, erp_team t, erp_dept d 
		where e1.employee1_no = e2.employee1_no 
		and e2.team_no = t.team_no 
		and t.dept_no = d.dept_no 
		and e2.comcode_no = #{comcode_no} 
		<if test="employee2_no != null">
			and e2.employee2_no != #{employee2_no}
		</if>
		<if test="type != null">
			<if test="type == 'all'">
				and (
						e1.employee1_name like '%${word}%' or e2.employee2_position like '%${word}%' 
						or t.team_name like '%${word}%' or d.dept_name like '%${word}%'
					)
			</if>
			<if test="type == 'employee1_name'">
				and e1.employee1_name like '%${word}%'
			</if>
			<if test="type == 'employee2_position'">
				and e2.employee2_position like '%${word}%'
			</if>
			<if test="type == 'team_name'">
				and t.team_name like '%${word}%'
			</if>
			<if test="type == 'dept_name'">
				and d.dept_name like '%${word}%'
			</if>
		</if>
	</select>
	
</mapper>








































